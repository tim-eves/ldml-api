apiVersion: apps/v1
kind: Deployment
metadata:
  name: ldml-api
  namespace: wstech
spec:
  replicas: 1
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: apps.deployment-wstech-ldml-api
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: apps.deployment-wstech-ldml-api
      namespace: wstech
    spec:
      restartPolicy: Always
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
                - key: workload.user.cattle.io/workloadselector
                  operator: In
                  values:
                    - apps.deployment-wstech-ldml-api
      containers:
        - name: endpoint
          command:
            - ldml-api
            - '--listen=0.0.0.0:80'
            - '--config=/var/lib/ldml-api/config.json'
            - '--profile=production'
          env:
            - name: RUST_LOG
              value: ldml_api=trace,tower_http=trace,axum=trace
            - name: TOKIO_WORKER_THREADS
              value: '8'
          image: ghcr.io/tim-eves/ldml-api:latest
          livenessProbe:
            httpGet:
              path: /status
              port: http
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 1
          startupProbe:
            httpGet:
              path: /status
              port: http
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          ports:
            - containerPort: 80
              name: http
          resources:
            limits:
              memory: 256Mi
            requests:
              memory: 256Mi
          volumeMounts:
            - mountPath: /var/lib/ldml-api/sldr
              name: data-sets
              readOnly: true
              subPath: sldr
            - mountPath: /var/lib/ldml-api/langtags
              name: data-sets
              readOnly: true
              subPath: langtags

      initContainers:
      - name: langtags-db
        image: alpine/curl:8.12.1
        workingDir: /mnt/
        command: [ '/bin/sh', '-c' ]
        args:
        - >-
          mkdir -p langtags/staging; mkdir -p langtags/production; cd langtags; 
          curl --silent --location --etag-save staging/etag --etag-compare staging/etag
          https://github.com/silnrsi/langtags/releases/download/staging/langtags.json
          --output staging/langtags.json;
          curl --silent --location --etag-save production/etag --etag-compare production/etag
          https://github.com/silnrsi/langtags/releases/download/staging/langtags.json
          --output production/langtags.json;
        volumeMounts: 
        - mountPath: /mnt
          name: data-sets

      - name: sldr-data
        image: alpine/curl:8.12.1
        workingDir: /mnt/
        command: [ '/bin/sh', '-c' ]
        args:
        - >-
          mkdir -p sldr/staging; mkdir -p sldr/production; 
          cd sldr/staging; 
          curl --silent --location --etag-save etag --etag-compare etag
          https://github.com/silnrsi/sldr/releases/download/staging/sldr.zip
          | unzip -o - || true;
          cd ../production;
          curl --silent --location --etag-save etag --etag-compare etag
          https://github.com/silnrsi/sldr/releases/download/staging/sldr.zip
          | unzip -o - || true;
        volumeMounts: 
        - mountPath: /mnt
          name: data-sets

      volumes:
      - name: data-sets
        persistentVolumeClaim:
          claimName: ldml-api-data
